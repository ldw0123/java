// 여러 종류의 객체를 배열로 다루기
class Product2 {
	int price;		 // 제품의 가격
	int bonusPoint;	 // 제품 구매 시 제공하는 포인트
	
	Product2(int price) {
		this.price = price;
		bonusPoint = (int)(price/10.0); 	// 포인트는 제품 가격의 10%
	}
	
	Product2() {   	 // 기본 생성자
		
	}
}

class Tv2 extends Product2 {
	Tv2() {
		// 조상클래스의 생성자 Product2(int price)를 호출한다
		super(100);  // Tv의 가격을 100만원으로 한다
	}
	
	// Object클래스의 toString()을 오버라이딩한다
	public String toString() {
		return "Tv";
	}
}

class Computer2 extends Product2 {
	Computer2() {
		super(200);  // Computer의 가격을 200만원으로 한다
	}
	public String toString() {
		return "Computer";
	}
}

class Audio2 extends Product2 {
	Audio2() {
		super(50); 	 // Audio의 가격을 50만원으로 한다
	}
	public String toString() {
		return "Audio";
	}
}

class Buyer2 {      	// 고객
	int money = 1000; 	// 소유 금액
	int bonusPoint = 0;	// 포인트
	Product2[] cart = new Product2[10]; 	// 구입한 제품을 저장하기 위한 배열
	int i = 0; 			// Product 배열에 사용될 카운터
	
	void buy(Product2 p) {	// new Tv1()과 new Computer()가 들어옴
		if(money < p.price) {
			System.out.println("잔액이 부족하여 물건을 살 수 없습니다");
			return;
		}
		money -= p.price;			// 가진 돈에서 구입한 제품의 가격을 뺀다
		bonusPoint += p.bonusPoint; // 제품의 포인트를 추가한다
		cart[i++] = p;
		System.out.println(p + "을/를 구입하셨습니다");		// p는 p.toString()과 같음
	}
	
	void summary() {	 	   // 구매한 물품에 대한 정보를 요약해서 보여 준다
		int sum = 0;	 	   // 구입한 물품의 가격합계
		String itemList = "";  // 구입한 물품목록
		
		// 반복문을 이용해서 구입한 물품의 총 가격과 목록을 만든다
		for(int i = 0; i<cart.length; i++) {
			if(cart[i] == null) break;
			sum += cart[i].price;
			itemList += cart[i] + ", ";
		}
		System.out.println("구입하신 물품의 총 금액은 " + sum + "만원입니다.");
		System.out.println("구입하신 제품은 " + itemList + "입니다.");	
	}
}

public class Ex7_9 {

	public static void main(String[] args) {
		Buyer2 b = new Buyer2();
		
		b.buy(new Tv2()); 	// Product p = new Tv2; b.buy(p);
		b.buy(new Computer2());
		b.buy(new Audio2());
		b.summary();
		
		System.out.println("현재 남은 돈은 " + b.money + "만원입니다.");
		System.out.println("현재 포인트는 " + b.bonusPoint + "점입니다.");
	}
}
